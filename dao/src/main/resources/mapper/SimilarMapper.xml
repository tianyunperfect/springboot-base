<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.alvin.dao.mapper.SimilarMapper">
  <resultMap id="BaseResultMap" type="com.alvin.dao.entity.Similar">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed May 27 15:17:38 CST 2020.
    -->
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="file_name" jdbcType="VARCHAR" property="fileName" />
    <result column="line_num" jdbcType="INTEGER" property="lineNum" />
    <result column="txt" jdbcType="VARCHAR" property="txt" />
    <result column="similar_txt" jdbcType="VARCHAR" property="similarTxt" />
    <result column="commit_time" jdbcType="TIMESTAMP" property="commitTime" />
    <result column="txt_option" jdbcType="VARCHAR" property="txtOption" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed May 27 15:17:38 CST 2020.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed May 27 15:17:38 CST 2020.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed May 27 15:17:38 CST 2020.
    -->
    id, file_name, line_num, txt, similar_txt, commit_time, txt_option
  </sql>
  <select id="selectByExample" parameterType="com.alvin.dao.entity.example.SimilarExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed May 27 15:17:38 CST 2020.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from similar
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed May 27 15:17:38 CST 2020.
    -->
    select
    <if test="example != null and example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from similar
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    <if test="example != null and example.rows != null">
      <if test="example.offset != null">
        limit ${example.offset}, ${example.rows}
      </if>
      <if test="example.offset == null">
        limit ${example.rows}
      </if>
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.alvin.dao.entity.example.SimilarExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed May 27 15:17:38 CST 2020.
    -->
    delete from similar
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.alvin.dao.entity.Similar">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed May 27 15:17:38 CST 2020.
    -->
    insert into similar (id, file_name, line_num, 
      txt, similar_txt, commit_time, 
      txt_option)
    values (#{id,jdbcType=BIGINT}, #{fileName,jdbcType=VARCHAR}, #{lineNum,jdbcType=INTEGER}, 
      #{txt,jdbcType=VARCHAR}, #{similarTxt,jdbcType=VARCHAR}, #{commitTime,jdbcType=TIMESTAMP}, 
      #{txtOption,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed May 27 15:17:38 CST 2020.
    -->
    insert into similar
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            id,
          </if>
          <if test="record.fileName != null">
            file_name,
          </if>
          <if test="record.lineNum != null">
            line_num,
          </if>
          <if test="record.txt != null">
            txt,
          </if>
          <if test="record.similarTxt != null">
            similar_txt,
          </if>
          <if test="record.commitTime != null">
            commit_time,
          </if>
          <if test="record.txtOption != null">
            txt_option,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.fileName != null">
            #{record.fileName,jdbcType=VARCHAR},
          </if>
          <if test="record.lineNum != null">
            #{record.lineNum,jdbcType=INTEGER},
          </if>
          <if test="record.txt != null">
            #{record.txt,jdbcType=VARCHAR},
          </if>
          <if test="record.similarTxt != null">
            #{record.similarTxt,jdbcType=VARCHAR},
          </if>
          <if test="record.commitTime != null">
            #{record.commitTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.txtOption != null">
            #{record.txtOption,jdbcType=VARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="com.alvin.dao.entity.example.SimilarExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed May 27 15:17:38 CST 2020.
    -->
    select count(*) from similar
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed May 27 15:17:38 CST 2020.
    -->
    update similar
    SET
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            id = #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.fileName != null">
            file_name = #{record.fileName,jdbcType=VARCHAR},
          </if>
          <if test="record.lineNum != null">
            line_num = #{record.lineNum,jdbcType=INTEGER},
          </if>
          <if test="record.txt != null">
            txt = #{record.txt,jdbcType=VARCHAR},
          </if>
          <if test="record.similarTxt != null">
            similar_txt = #{record.similarTxt,jdbcType=VARCHAR},
          </if>
          <if test="record.commitTime != null">
            commit_time = #{record.commitTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.txtOption != null">
            txt_option = #{record.txtOption,jdbcType=VARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed May 27 15:17:38 CST 2020.
    -->
    update similar
    set id = #{record.id,jdbcType=BIGINT},
      file_name = #{record.fileName,jdbcType=VARCHAR},
      line_num = #{record.lineNum,jdbcType=INTEGER},
      txt = #{record.txt,jdbcType=VARCHAR},
      similar_txt = #{record.similarTxt,jdbcType=VARCHAR},
      commit_time = #{record.commitTime,jdbcType=TIMESTAMP},
      txt_option = #{record.txtOption,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectOneByExample" parameterType="com.alvin.dao.entity.example.SimilarExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed May 27 15:17:38 CST 2020.
    -->
    select
    <include refid="Base_Column_List" />
    from similar
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed May 27 15:17:38 CST 2020.
    -->
    select
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from similar
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed May 27 15:17:38 CST 2020.
    -->
    insert into similar
    (id, file_name, line_num, txt, similar_txt, commit_time, txt_option)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.fileName,jdbcType=VARCHAR}, #{item.lineNum,jdbcType=INTEGER}, 
        #{item.txt,jdbcType=VARCHAR}, #{item.similarTxt,jdbcType=VARCHAR}, #{item.commitTime,jdbcType=TIMESTAMP}, 
        #{item.txtOption,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed May 27 15:17:38 CST 2020.
    -->
    insert into similar (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'id'.toString() == column.value">
          #{item.id,jdbcType=BIGINT}
        </if>
        <if test="'file_name'.toString() == column.value">
          #{item.fileName,jdbcType=VARCHAR}
        </if>
        <if test="'line_num'.toString() == column.value">
          #{item.lineNum,jdbcType=INTEGER}
        </if>
        <if test="'txt'.toString() == column.value">
          #{item.txt,jdbcType=VARCHAR}
        </if>
        <if test="'similar_txt'.toString() == column.value">
          #{item.similarTxt,jdbcType=VARCHAR}
        </if>
        <if test="'commit_time'.toString() == column.value">
          #{item.commitTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'txt_option'.toString() == column.value">
          #{item.txtOption,jdbcType=VARCHAR}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
  <insert id="upsertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed May 27 15:17:38 CST 2020.
    -->
    insert into similar
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            id,
          </if>
          <if test="record.fileName != null">
            file_name,
          </if>
          <if test="record.lineNum != null">
            line_num,
          </if>
          <if test="record.txt != null">
            txt,
          </if>
          <if test="record.similarTxt != null">
            similar_txt,
          </if>
          <if test="record.commitTime != null">
            commit_time,
          </if>
          <if test="record.txtOption != null">
            txt_option,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.fileName != null">
            #{record.fileName,jdbcType=VARCHAR},
          </if>
          <if test="record.lineNum != null">
            #{record.lineNum,jdbcType=INTEGER},
          </if>
          <if test="record.txt != null">
            #{record.txt,jdbcType=VARCHAR},
          </if>
          <if test="record.similarTxt != null">
            #{record.similarTxt,jdbcType=VARCHAR},
          </if>
          <if test="record.commitTime != null">
            #{record.commitTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.txtOption != null">
            #{record.txtOption,jdbcType=VARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
    on duplicate key update 
    <choose>
      <when test="selective != null and selective.length &gt; 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            id = #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.fileName != null">
            file_name = #{record.fileName,jdbcType=VARCHAR},
          </if>
          <if test="record.lineNum != null">
            line_num = #{record.lineNum,jdbcType=INTEGER},
          </if>
          <if test="record.txt != null">
            txt = #{record.txt,jdbcType=VARCHAR},
          </if>
          <if test="record.similarTxt != null">
            similar_txt = #{record.similarTxt,jdbcType=VARCHAR},
          </if>
          <if test="record.commitTime != null">
            commit_time = #{record.commitTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.txtOption != null">
            txt_option = #{record.txtOption,jdbcType=VARCHAR},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <insert id="upsert" parameterType="com.alvin.dao.entity.Similar">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed May 27 15:17:38 CST 2020.
    -->
    insert into similar
    (id, file_name, line_num, txt, similar_txt, commit_time, txt_option)
    values
    (#{id,jdbcType=BIGINT}, #{fileName,jdbcType=VARCHAR}, #{lineNum,jdbcType=INTEGER}, 
      #{txt,jdbcType=VARCHAR}, #{similarTxt,jdbcType=VARCHAR}, #{commitTime,jdbcType=TIMESTAMP}, 
      #{txtOption,jdbcType=VARCHAR})
    on duplicate key update 
    id = #{id,jdbcType=BIGINT}, 
    file_name = #{fileName,jdbcType=VARCHAR}, 
    line_num = #{lineNum,jdbcType=INTEGER}, 
    txt = #{txt,jdbcType=VARCHAR}, 
    similar_txt = #{similarTxt,jdbcType=VARCHAR}, 
    commit_time = #{commitTime,jdbcType=TIMESTAMP}, 
    txt_option = #{txtOption,jdbcType=VARCHAR}
  </insert>
</mapper>