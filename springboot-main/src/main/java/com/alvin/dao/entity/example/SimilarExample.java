package com.alvin.dao.entity.example;

import com.alvin.dao.entity.Similar;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class SimilarExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table similar
     *
     * @mbg.generated Thu Aug 20 14:29:45 CST 2020
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table similar
     *
     * @mbg.generated Thu Aug 20 14:29:45 CST 2020
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table similar
     *
     * @mbg.generated Thu Aug 20 14:29:45 CST 2020
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table similar
     *
     * @mbg.generated Thu Aug 20 14:29:45 CST 2020
     */
    protected Integer offset;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table similar
     *
     * @mbg.generated Thu Aug 20 14:29:45 CST 2020
     */
    protected Integer rows;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table similar
     *
     * @mbg.generated Thu Aug 20 14:29:45 CST 2020
     */
    public SimilarExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table similar
     *
     * @mbg.generated Thu Aug 20 14:29:45 CST 2020
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table similar
     *
     * @mbg.generated Thu Aug 20 14:29:45 CST 2020
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table similar
     *
     * @mbg.generated Thu Aug 20 14:29:45 CST 2020
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table similar
     *
     * @mbg.generated Thu Aug 20 14:29:45 CST 2020
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table similar
     *
     * @mbg.generated Thu Aug 20 14:29:45 CST 2020
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table similar
     *
     * @mbg.generated Thu Aug 20 14:29:45 CST 2020
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table similar
     *
     * @mbg.generated Thu Aug 20 14:29:45 CST 2020
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table similar
     *
     * @mbg.generated Thu Aug 20 14:29:45 CST 2020
     */
    public SimilarExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table similar
     *
     * @mbg.generated Thu Aug 20 14:29:45 CST 2020
     */
    public SimilarExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table similar
     *
     * @mbg.generated Thu Aug 20 14:29:45 CST 2020
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table similar
     *
     * @mbg.generated Thu Aug 20 14:29:45 CST 2020
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table similar
     *
     * @mbg.generated Thu Aug 20 14:29:45 CST 2020
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
        rows = null;
        offset = null;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table similar
     *
     * @mbg.generated Thu Aug 20 14:29:45 CST 2020
     */
    public void setOffset(Integer offset) {
        this.offset = offset;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table similar
     *
     * @mbg.generated Thu Aug 20 14:29:45 CST 2020
     */
    public Integer getOffset() {
        return this.offset;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table similar
     *
     * @mbg.generated Thu Aug 20 14:29:45 CST 2020
     */
    public void setRows(Integer rows) {
        this.rows = rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table similar
     *
     * @mbg.generated Thu Aug 20 14:29:45 CST 2020
     */
    public Integer getRows() {
        return this.rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table similar
     *
     * @mbg.generated Thu Aug 20 14:29:45 CST 2020
     */
    public SimilarExample limit(Integer rows) {
        this.rows = rows;
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table similar
     *
     * @mbg.generated Thu Aug 20 14:29:45 CST 2020
     */
    public SimilarExample limit(Integer offset, Integer rows) {
        this.offset = offset;
        this.rows = rows;
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table similar
     *
     * @mbg.generated Thu Aug 20 14:29:45 CST 2020
     */
    public SimilarExample page(Integer page, Integer pageSize) {
        this.offset = page * pageSize;
        this.rows = pageSize;
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table similar
     *
     * @mbg.generated Thu Aug 20 14:29:45 CST 2020
     */
    public static Criteria newAndCreateCriteria() {
        SimilarExample example = new SimilarExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table similar
     *
     * @mbg.generated Thu Aug 20 14:29:45 CST 2020
     */
    public SimilarExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table similar
     *
     * @mbg.generated Thu Aug 20 14:29:45 CST 2020
     */
    public SimilarExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table similar
     *
     * @mbg.generated Thu Aug 20 14:29:45 CST 2020
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdEqualToColumn(Similar.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualToColumn(Similar.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanColumn(Similar.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualToColumn(Similar.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanColumn(Similar.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualToColumn(Similar.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andFileNameIsNull() {
            addCriterion("file_name is null");
            return (Criteria) this;
        }

        public Criteria andFileNameIsNotNull() {
            addCriterion("file_name is not null");
            return (Criteria) this;
        }

        public Criteria andFileNameEqualTo(String value) {
            addCriterion("file_name =", value, "fileName");
            return (Criteria) this;
        }

        public Criteria andFileNameEqualToColumn(Similar.Column column) {
            addCriterion(new StringBuilder("file_name = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFileNameNotEqualTo(String value) {
            addCriterion("file_name <>", value, "fileName");
            return (Criteria) this;
        }

        public Criteria andFileNameNotEqualToColumn(Similar.Column column) {
            addCriterion(new StringBuilder("file_name <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFileNameGreaterThan(String value) {
            addCriterion("file_name >", value, "fileName");
            return (Criteria) this;
        }

        public Criteria andFileNameGreaterThanColumn(Similar.Column column) {
            addCriterion(new StringBuilder("file_name > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFileNameGreaterThanOrEqualTo(String value) {
            addCriterion("file_name >=", value, "fileName");
            return (Criteria) this;
        }

        public Criteria andFileNameGreaterThanOrEqualToColumn(Similar.Column column) {
            addCriterion(new StringBuilder("file_name >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFileNameLessThan(String value) {
            addCriterion("file_name <", value, "fileName");
            return (Criteria) this;
        }

        public Criteria andFileNameLessThanColumn(Similar.Column column) {
            addCriterion(new StringBuilder("file_name < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFileNameLessThanOrEqualTo(String value) {
            addCriterion("file_name <=", value, "fileName");
            return (Criteria) this;
        }

        public Criteria andFileNameLessThanOrEqualToColumn(Similar.Column column) {
            addCriterion(new StringBuilder("file_name <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFileNameLike(String value) {
            addCriterion("file_name like", value, "fileName");
            return (Criteria) this;
        }

        public Criteria andFileNameNotLike(String value) {
            addCriterion("file_name not like", value, "fileName");
            return (Criteria) this;
        }

        public Criteria andFileNameIn(List<String> values) {
            addCriterion("file_name in", values, "fileName");
            return (Criteria) this;
        }

        public Criteria andFileNameNotIn(List<String> values) {
            addCriterion("file_name not in", values, "fileName");
            return (Criteria) this;
        }

        public Criteria andFileNameBetween(String value1, String value2) {
            addCriterion("file_name between", value1, value2, "fileName");
            return (Criteria) this;
        }

        public Criteria andFileNameNotBetween(String value1, String value2) {
            addCriterion("file_name not between", value1, value2, "fileName");
            return (Criteria) this;
        }

        public Criteria andLineNumIsNull() {
            addCriterion("line_num is null");
            return (Criteria) this;
        }

        public Criteria andLineNumIsNotNull() {
            addCriterion("line_num is not null");
            return (Criteria) this;
        }

        public Criteria andLineNumEqualTo(Integer value) {
            addCriterion("line_num =", value, "lineNum");
            return (Criteria) this;
        }

        public Criteria andLineNumEqualToColumn(Similar.Column column) {
            addCriterion(new StringBuilder("line_num = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLineNumNotEqualTo(Integer value) {
            addCriterion("line_num <>", value, "lineNum");
            return (Criteria) this;
        }

        public Criteria andLineNumNotEqualToColumn(Similar.Column column) {
            addCriterion(new StringBuilder("line_num <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLineNumGreaterThan(Integer value) {
            addCriterion("line_num >", value, "lineNum");
            return (Criteria) this;
        }

        public Criteria andLineNumGreaterThanColumn(Similar.Column column) {
            addCriterion(new StringBuilder("line_num > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLineNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("line_num >=", value, "lineNum");
            return (Criteria) this;
        }

        public Criteria andLineNumGreaterThanOrEqualToColumn(Similar.Column column) {
            addCriterion(new StringBuilder("line_num >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLineNumLessThan(Integer value) {
            addCriterion("line_num <", value, "lineNum");
            return (Criteria) this;
        }

        public Criteria andLineNumLessThanColumn(Similar.Column column) {
            addCriterion(new StringBuilder("line_num < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLineNumLessThanOrEqualTo(Integer value) {
            addCriterion("line_num <=", value, "lineNum");
            return (Criteria) this;
        }

        public Criteria andLineNumLessThanOrEqualToColumn(Similar.Column column) {
            addCriterion(new StringBuilder("line_num <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andLineNumIn(List<Integer> values) {
            addCriterion("line_num in", values, "lineNum");
            return (Criteria) this;
        }

        public Criteria andLineNumNotIn(List<Integer> values) {
            addCriterion("line_num not in", values, "lineNum");
            return (Criteria) this;
        }

        public Criteria andLineNumBetween(Integer value1, Integer value2) {
            addCriterion("line_num between", value1, value2, "lineNum");
            return (Criteria) this;
        }

        public Criteria andLineNumNotBetween(Integer value1, Integer value2) {
            addCriterion("line_num not between", value1, value2, "lineNum");
            return (Criteria) this;
        }

        public Criteria andTxtIsNull() {
            addCriterion("txt is null");
            return (Criteria) this;
        }

        public Criteria andTxtIsNotNull() {
            addCriterion("txt is not null");
            return (Criteria) this;
        }

        public Criteria andTxtEqualTo(String value) {
            addCriterion("txt =", value, "txt");
            return (Criteria) this;
        }

        public Criteria andTxtEqualToColumn(Similar.Column column) {
            addCriterion(new StringBuilder("txt = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTxtNotEqualTo(String value) {
            addCriterion("txt <>", value, "txt");
            return (Criteria) this;
        }

        public Criteria andTxtNotEqualToColumn(Similar.Column column) {
            addCriterion(new StringBuilder("txt <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTxtGreaterThan(String value) {
            addCriterion("txt >", value, "txt");
            return (Criteria) this;
        }

        public Criteria andTxtGreaterThanColumn(Similar.Column column) {
            addCriterion(new StringBuilder("txt > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTxtGreaterThanOrEqualTo(String value) {
            addCriterion("txt >=", value, "txt");
            return (Criteria) this;
        }

        public Criteria andTxtGreaterThanOrEqualToColumn(Similar.Column column) {
            addCriterion(new StringBuilder("txt >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTxtLessThan(String value) {
            addCriterion("txt <", value, "txt");
            return (Criteria) this;
        }

        public Criteria andTxtLessThanColumn(Similar.Column column) {
            addCriterion(new StringBuilder("txt < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTxtLessThanOrEqualTo(String value) {
            addCriterion("txt <=", value, "txt");
            return (Criteria) this;
        }

        public Criteria andTxtLessThanOrEqualToColumn(Similar.Column column) {
            addCriterion(new StringBuilder("txt <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTxtLike(String value) {
            addCriterion("txt like", value, "txt");
            return (Criteria) this;
        }

        public Criteria andTxtNotLike(String value) {
            addCriterion("txt not like", value, "txt");
            return (Criteria) this;
        }

        public Criteria andTxtIn(List<String> values) {
            addCriterion("txt in", values, "txt");
            return (Criteria) this;
        }

        public Criteria andTxtNotIn(List<String> values) {
            addCriterion("txt not in", values, "txt");
            return (Criteria) this;
        }

        public Criteria andTxtBetween(String value1, String value2) {
            addCriterion("txt between", value1, value2, "txt");
            return (Criteria) this;
        }

        public Criteria andTxtNotBetween(String value1, String value2) {
            addCriterion("txt not between", value1, value2, "txt");
            return (Criteria) this;
        }

        public Criteria andSimilarTxtIsNull() {
            addCriterion("similar_txt is null");
            return (Criteria) this;
        }

        public Criteria andSimilarTxtIsNotNull() {
            addCriterion("similar_txt is not null");
            return (Criteria) this;
        }

        public Criteria andSimilarTxtEqualTo(String value) {
            addCriterion("similar_txt =", value, "similarTxt");
            return (Criteria) this;
        }

        public Criteria andSimilarTxtEqualToColumn(Similar.Column column) {
            addCriterion(new StringBuilder("similar_txt = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSimilarTxtNotEqualTo(String value) {
            addCriterion("similar_txt <>", value, "similarTxt");
            return (Criteria) this;
        }

        public Criteria andSimilarTxtNotEqualToColumn(Similar.Column column) {
            addCriterion(new StringBuilder("similar_txt <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSimilarTxtGreaterThan(String value) {
            addCriterion("similar_txt >", value, "similarTxt");
            return (Criteria) this;
        }

        public Criteria andSimilarTxtGreaterThanColumn(Similar.Column column) {
            addCriterion(new StringBuilder("similar_txt > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSimilarTxtGreaterThanOrEqualTo(String value) {
            addCriterion("similar_txt >=", value, "similarTxt");
            return (Criteria) this;
        }

        public Criteria andSimilarTxtGreaterThanOrEqualToColumn(Similar.Column column) {
            addCriterion(new StringBuilder("similar_txt >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSimilarTxtLessThan(String value) {
            addCriterion("similar_txt <", value, "similarTxt");
            return (Criteria) this;
        }

        public Criteria andSimilarTxtLessThanColumn(Similar.Column column) {
            addCriterion(new StringBuilder("similar_txt < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSimilarTxtLessThanOrEqualTo(String value) {
            addCriterion("similar_txt <=", value, "similarTxt");
            return (Criteria) this;
        }

        public Criteria andSimilarTxtLessThanOrEqualToColumn(Similar.Column column) {
            addCriterion(new StringBuilder("similar_txt <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andSimilarTxtLike(String value) {
            addCriterion("similar_txt like", value, "similarTxt");
            return (Criteria) this;
        }

        public Criteria andSimilarTxtNotLike(String value) {
            addCriterion("similar_txt not like", value, "similarTxt");
            return (Criteria) this;
        }

        public Criteria andSimilarTxtIn(List<String> values) {
            addCriterion("similar_txt in", values, "similarTxt");
            return (Criteria) this;
        }

        public Criteria andSimilarTxtNotIn(List<String> values) {
            addCriterion("similar_txt not in", values, "similarTxt");
            return (Criteria) this;
        }

        public Criteria andSimilarTxtBetween(String value1, String value2) {
            addCriterion("similar_txt between", value1, value2, "similarTxt");
            return (Criteria) this;
        }

        public Criteria andSimilarTxtNotBetween(String value1, String value2) {
            addCriterion("similar_txt not between", value1, value2, "similarTxt");
            return (Criteria) this;
        }

        public Criteria andCommitTimeIsNull() {
            addCriterion("commit_time is null");
            return (Criteria) this;
        }

        public Criteria andCommitTimeIsNotNull() {
            addCriterion("commit_time is not null");
            return (Criteria) this;
        }

        public Criteria andCommitTimeEqualTo(Date value) {
            addCriterion("commit_time =", value, "commitTime");
            return (Criteria) this;
        }

        public Criteria andCommitTimeEqualToColumn(Similar.Column column) {
            addCriterion(new StringBuilder("commit_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCommitTimeNotEqualTo(Date value) {
            addCriterion("commit_time <>", value, "commitTime");
            return (Criteria) this;
        }

        public Criteria andCommitTimeNotEqualToColumn(Similar.Column column) {
            addCriterion(new StringBuilder("commit_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCommitTimeGreaterThan(Date value) {
            addCriterion("commit_time >", value, "commitTime");
            return (Criteria) this;
        }

        public Criteria andCommitTimeGreaterThanColumn(Similar.Column column) {
            addCriterion(new StringBuilder("commit_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCommitTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("commit_time >=", value, "commitTime");
            return (Criteria) this;
        }

        public Criteria andCommitTimeGreaterThanOrEqualToColumn(Similar.Column column) {
            addCriterion(new StringBuilder("commit_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCommitTimeLessThan(Date value) {
            addCriterion("commit_time <", value, "commitTime");
            return (Criteria) this;
        }

        public Criteria andCommitTimeLessThanColumn(Similar.Column column) {
            addCriterion(new StringBuilder("commit_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCommitTimeLessThanOrEqualTo(Date value) {
            addCriterion("commit_time <=", value, "commitTime");
            return (Criteria) this;
        }

        public Criteria andCommitTimeLessThanOrEqualToColumn(Similar.Column column) {
            addCriterion(new StringBuilder("commit_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCommitTimeIn(List<Date> values) {
            addCriterion("commit_time in", values, "commitTime");
            return (Criteria) this;
        }

        public Criteria andCommitTimeNotIn(List<Date> values) {
            addCriterion("commit_time not in", values, "commitTime");
            return (Criteria) this;
        }

        public Criteria andCommitTimeBetween(Date value1, Date value2) {
            addCriterion("commit_time between", value1, value2, "commitTime");
            return (Criteria) this;
        }

        public Criteria andCommitTimeNotBetween(Date value1, Date value2) {
            addCriterion("commit_time not between", value1, value2, "commitTime");
            return (Criteria) this;
        }

        public Criteria andTxtOptionIsNull() {
            addCriterion("txt_option is null");
            return (Criteria) this;
        }

        public Criteria andTxtOptionIsNotNull() {
            addCriterion("txt_option is not null");
            return (Criteria) this;
        }

        public Criteria andTxtOptionEqualTo(String value) {
            addCriterion("txt_option =", value, "txtOption");
            return (Criteria) this;
        }

        public Criteria andTxtOptionEqualToColumn(Similar.Column column) {
            addCriterion(new StringBuilder("txt_option = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTxtOptionNotEqualTo(String value) {
            addCriterion("txt_option <>", value, "txtOption");
            return (Criteria) this;
        }

        public Criteria andTxtOptionNotEqualToColumn(Similar.Column column) {
            addCriterion(new StringBuilder("txt_option <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTxtOptionGreaterThan(String value) {
            addCriterion("txt_option >", value, "txtOption");
            return (Criteria) this;
        }

        public Criteria andTxtOptionGreaterThanColumn(Similar.Column column) {
            addCriterion(new StringBuilder("txt_option > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTxtOptionGreaterThanOrEqualTo(String value) {
            addCriterion("txt_option >=", value, "txtOption");
            return (Criteria) this;
        }

        public Criteria andTxtOptionGreaterThanOrEqualToColumn(Similar.Column column) {
            addCriterion(new StringBuilder("txt_option >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTxtOptionLessThan(String value) {
            addCriterion("txt_option <", value, "txtOption");
            return (Criteria) this;
        }

        public Criteria andTxtOptionLessThanColumn(Similar.Column column) {
            addCriterion(new StringBuilder("txt_option < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTxtOptionLessThanOrEqualTo(String value) {
            addCriterion("txt_option <=", value, "txtOption");
            return (Criteria) this;
        }

        public Criteria andTxtOptionLessThanOrEqualToColumn(Similar.Column column) {
            addCriterion(new StringBuilder("txt_option <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTxtOptionLike(String value) {
            addCriterion("txt_option like", value, "txtOption");
            return (Criteria) this;
        }

        public Criteria andTxtOptionNotLike(String value) {
            addCriterion("txt_option not like", value, "txtOption");
            return (Criteria) this;
        }

        public Criteria andTxtOptionIn(List<String> values) {
            addCriterion("txt_option in", values, "txtOption");
            return (Criteria) this;
        }

        public Criteria andTxtOptionNotIn(List<String> values) {
            addCriterion("txt_option not in", values, "txtOption");
            return (Criteria) this;
        }

        public Criteria andTxtOptionBetween(String value1, String value2) {
            addCriterion("txt_option between", value1, value2, "txtOption");
            return (Criteria) this;
        }

        public Criteria andTxtOptionNotBetween(String value1, String value2) {
            addCriterion("txt_option not between", value1, value2, "txtOption");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table similar
     *
     * @mbg.generated do_not_delete_during_merge Thu Aug 20 14:29:45 CST 2020
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table similar
         *
         * @mbg.generated Thu Aug 20 14:29:45 CST 2020
         */
        private SimilarExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table similar
         *
         * @mbg.generated Thu Aug 20 14:29:45 CST 2020
         */
        protected Criteria(SimilarExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table similar
         *
         * @mbg.generated Thu Aug 20 14:29:45 CST 2020
         */
        public SimilarExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table similar
         *
         * @mbg.generated Thu Aug 20 14:29:45 CST 2020
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table similar
         *
         * @mbg.generated Thu Aug 20 14:29:45 CST 2020
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table similar
         *
         * @mbg.generated Thu Aug 20 14:29:45 CST 2020
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table similar
             *
             * @mbg.generated Thu Aug 20 14:29:45 CST 2020
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table similar
     *
     * @mbg.generated Thu Aug 20 14:29:45 CST 2020
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table similar
         *
         * @mbg.generated Thu Aug 20 14:29:45 CST 2020
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table similar
         *
         * @mbg.generated Thu Aug 20 14:29:45 CST 2020
         */
        void example(com.alvin.dao.entity.example.SimilarExample example);
    }
}